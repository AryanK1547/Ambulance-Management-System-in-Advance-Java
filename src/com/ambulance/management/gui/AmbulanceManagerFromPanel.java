/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ambulance.management.gui;


import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.Connection;

import java.sql.*;

import java.sql.PreparedStatement;

import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */

public class AmbulanceManagerFromPanel extends javax.swing.JFrame {

    /**
     * Creates new form AmbulanceManagerPanelGUI
     */
    public AmbulanceManagerFromPanel() {
        initComponents();
        populateComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        btnShowAddAmbulancePanel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnShowUpdateAmbulancePanel = new javax.swing.JButton();
        btnShowRemoveAmbulancePanel = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        removeAmbulancePanel = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        btnRemoveAmbulance = new javax.swing.JButton();
        txtRemoveAmbulanceID = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        addAmbulancePanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        btnAddAmbulance = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtAddAmbulanceID = new javax.swing.JTextField();
        txtAddDriverName = new javax.swing.JTextField();
        cbAddAmbulanceType = new javax.swing.JComboBox<>();
        cbAddAmbulanceStatus = new javax.swing.JComboBox<>();
        btnClearAddAmbulance = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbAddLocation = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRemoveAmbulance = new javax.swing.JTable();
        updateAmbulancePanel = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        btnUpdateAmbulance = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtUpdateAmbulanceID = new javax.swing.JTextField();
        txtUpdateDriverName = new javax.swing.JTextField();
        cbUpdateAmbulanceType = new javax.swing.JComboBox<>();
        btnClearUpdateAmbulance = new javax.swing.JButton();
        cbUpdateAmbulanceStatus = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        cbUpdateLocation = new javax.swing.JComboBox<>();
        ShowAmbulancePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAllAmbulance = new javax.swing.JTable();
        btnShowAllAmbulance = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnShowAddAmbulancePanel.setText("Add New Ambulance");
        btnShowAddAmbulancePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAddAmbulancePanelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel1.setText("Welcome To Ambulance Manager");

        jLabel2.setText("Select What to Do: ");

        btnShowUpdateAmbulancePanel.setText("Update Existing Ambulance");
        btnShowUpdateAmbulancePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowUpdateAmbulancePanelActionPerformed(evt);
            }
        });

        btnShowRemoveAmbulancePanel.setText("Remove Ambulance");
        btnShowRemoveAmbulancePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRemoveAmbulancePanelActionPerformed(evt);
            }
        });

        mainPanel.setLayout(new java.awt.CardLayout());

        jLabel39.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel39.setText("Ambulance ID");

        jLabel40.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(51, 153, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel40.setText("Remove Ambulance");

        jLabel41.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel41.setText("Registration Number");

        btnRemoveAmbulance.setBackground(new java.awt.Color(255, 0, 51));
        btnRemoveAmbulance.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnRemoveAmbulance.setText(" Remove Ambulance");
        btnRemoveAmbulance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAmbulancejButton9ActionPerformed(evt);
            }
        });

        txtRemoveAmbulanceID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRemoveAmbulanceIDjTextField5ActionPerformed(evt);
            }
        });

        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel43.setText("Ambulance Manager - ");

        jLabel27.setText("Ambulance ID");

        jLabel28.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel28.setText("Ambulance Manager - ");

        jLabel29.setText("Driver Name");

        btnAddAmbulance.setText("Add");
        btnAddAmbulance.setActionCommand(" Add Ambulance");
        btnAddAmbulance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel30.setText("Ambulance Type");

        jLabel31.setText("Availablity Status");

        jLabel32.setText("Location");

        txtAddAmbulanceID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        cbAddAmbulanceType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbAddAmbulanceStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAddAmbulanceStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAddAmbulanceStatusActionPerformed(evt);
            }
        });

        btnClearAddAmbulance.setText("Clear ");

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 255));
        jLabel3.setText("Add New Ambulance");

        cbAddLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout addAmbulancePanelLayout = new javax.swing.GroupLayout(addAmbulancePanel);
        addAmbulancePanel.setLayout(addAmbulancePanelLayout);
        addAmbulancePanelLayout.setHorizontalGroup(
            addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddAmbulanceID)
                    .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btnAddAmbulance, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClearAddAmbulance, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbAddAmbulanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddDriverName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                        .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(137, 137, 137)
                        .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbAddAmbulanceType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbAddLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 153, Short.MAX_VALUE)))))
                .addGap(42, 42, 42))
            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addAmbulancePanelLayout.setVerticalGroup(
            addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAmbulancePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtAddAmbulanceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddDriverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAddAmbulanceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAddAmbulanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAddLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addGroup(addAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddAmbulance)
                    .addComponent(btnClearAddAmbulance))
                .addGap(30, 30, 30))
        );

        tableRemoveAmbulance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ambulance ID", "Registration No", "Driver Name", "Ambulance Type", "Ambulance Status", "Location"
            }
        ));
        jScrollPane2.setViewportView(tableRemoveAmbulance);

        javax.swing.GroupLayout removeAmbulancePanelLayout = new javax.swing.GroupLayout(removeAmbulancePanel);
        removeAmbulancePanel.setLayout(removeAmbulancePanelLayout);
        removeAmbulancePanelLayout.setHorizontalGroup(
            removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addAmbulancePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2))
                    .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                        .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRemoveAmbulanceID, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                .addGap(331, 331, 331)
                                .addComponent(btnRemoveAmbulance)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeAmbulancePanelLayout.setVerticalGroup(
            removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAmbulancePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                        .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel43)
                            .addGroup(removeAmbulancePanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(removeAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRemoveAmbulanceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(btnRemoveAmbulance)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(removeAmbulancePanel, "card3");

        jLabel33.setText("Ambulance ID");

        jLabel34.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 153, 255));
        jLabel34.setText("Update Ambulance");

        jLabel35.setText("Driver Name");

        btnUpdateAmbulance.setLabel("Update");
        btnUpdateAmbulance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAmbulancejButton9ActionPerformed(evt);
            }
        });

        jLabel36.setText("Ambulance Type");

        jLabel37.setText("Availablity Status");

        jLabel38.setText("Location");

        txtUpdateAmbulanceID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateAmbulanceIDjTextField5ActionPerformed(evt);
            }
        });

        txtUpdateDriverName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        cbUpdateAmbulanceType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnClearUpdateAmbulance.setText("Clear ");

        cbUpdateAmbulanceStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel42.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel42.setText("Ambulance Manager - ");

        cbUpdateLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout updateAmbulancePanelLayout = new javax.swing.GroupLayout(updateAmbulancePanel);
        updateAmbulancePanel.setLayout(updateAmbulancePanelLayout);
        updateAmbulancePanelLayout.setHorizontalGroup(
            updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateAmbulancePanelLayout.createSequentialGroup()
                        .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                                .addComponent(btnUpdateAmbulance)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClearUpdateAmbulance, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtUpdateDriverName)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateAmbulancePanelLayout.createSequentialGroup()
                                .addComponent(cbUpdateAmbulanceType, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(cbUpdateAmbulanceStatus, 0, 431, Short.MAX_VALUE))
                            .addComponent(txtUpdateAmbulanceID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateAmbulancePanelLayout.createSequentialGroup()
                                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(47, 47, 47))
                    .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(375, Short.MAX_VALUE))
                    .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                        .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbUpdateLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        updateAmbulancePanelLayout.setVerticalGroup(
            updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAmbulancePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUpdateAmbulanceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel35)
                .addGap(8, 8, 8)
                .addComponent(txtUpdateDriverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUpdateAmbulanceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUpdateAmbulanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbUpdateLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(updateAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateAmbulance)
                    .addComponent(btnClearUpdateAmbulance))
                .addGap(43, 43, 43))
        );

        mainPanel.add(updateAmbulancePanel, "card3");

        tableAllAmbulance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ambulance ID", "Registration No", "Driver Name", "Ambulance Type", "Ambulance Status", "Location"
            }
        ));
        jScrollPane1.setViewportView(tableAllAmbulance);

        javax.swing.GroupLayout ShowAmbulancePanelLayout = new javax.swing.GroupLayout(ShowAmbulancePanel);
        ShowAmbulancePanel.setLayout(ShowAmbulancePanelLayout);
        ShowAmbulancePanelLayout.setHorizontalGroup(
            ShowAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAmbulancePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ShowAmbulancePanelLayout.setVerticalGroup(
            ShowAmbulancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAmbulancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        mainPanel.add(ShowAmbulancePanel, "card5");

        btnShowAllAmbulance.setText("Show All Ambulance");
        btnShowAllAmbulance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllAmbulanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowAddAmbulancePanel)
                .addGap(18, 18, 18)
                .addComponent(btnShowUpdateAmbulancePanel)
                .addGap(18, 18, 18)
                .addComponent(btnShowRemoveAmbulancePanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShowAllAmbulance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnShowAddAmbulancePanel)
                    .addComponent(btnShowUpdateAmbulancePanel)
                    .addComponent(btnShowRemoveAmbulancePanel)
                    .addComponent(btnShowAllAmbulance))
                .addGap(18, 18, 18)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowAddAmbulancePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAddAmbulancePanelActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(addAmbulancePanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btnShowAddAmbulancePanelActionPerformed

    private void btnShowUpdateAmbulancePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowUpdateAmbulancePanelActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        showAvailableAmbulances();
        mainPanel.add(updateAmbulancePanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_btnShowUpdateAmbulancePanelActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
// TODO add your handling code here:
String ambulanceId = txtAddAmbulanceID.getText().trim();
String driverName = txtAddDriverName.getText().trim();
String type = cbAddAmbulanceType.getSelectedItem() != null ? cbAddAmbulanceType.getSelectedItem().toString() : "";
String status = cbAddAmbulanceStatus.getSelectedItem() != null ? cbAddAmbulanceStatus.getSelectedItem().toString() : "";
String location = cbAddLocation.getSelectedItem() != null ? cbAddLocation.getSelectedItem().toString() : "";

// Validate each field before proceeding
if (ambulanceId.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Ambulance ID is required.");
    txtAddAmbulanceID.requestFocus();
    return;
}

if (driverName.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Driver name is required.");
    txtAddDriverName.requestFocus();
    return;
}

if (type.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Ambulance type is required.");
    cbAddAmbulanceType.requestFocus();
    return;
}

if (status.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Ambulance status is required.");
    cbAddAmbulanceStatus.requestFocus();
    return;
}

if (location.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Ambulance location is required.");
    cbAddLocation.requestFocus();
    return;
}

// Database connection parameters
String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem";
String username = "root";
String password = "mysql";

// SQL insert statement
String insertSQL = "INSERT INTO Ambulance (ambulance_id, driver_name, type, status, location) VALUES (?, ?, ?, ?, ?)";

// Initialize connection and prepared statement
Connection conn = null;
PreparedStatement pstmt = null;

try {
    // Establishing the database connection
    conn = DriverManager.getConnection(url, username, password);
    pstmt = conn.prepareStatement(insertSQL);

    // Set parameters for the SQL query
    pstmt.setString(1, ambulanceId);
    pstmt.setString(2, driverName);
    pstmt.setString(3, type);
    pstmt.setString(4, status);
    pstmt.setString(5, location);

    // Execute the insert operation
    int rowsAffected = pstmt.executeUpdate();

    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(this, "Ambulance added successfully!");
        // Clear the form fields after insertion
        txtAddAmbulanceID.setText("");
        txtAddDriverName.setText("");
        cbAddAmbulanceType.setSelectedIndex(0);
        cbAddAmbulanceStatus.setSelectedIndex(0);
        cbAddLocation.setSelectedIndex(0);
    } else {
        JOptionPane.showMessageDialog(this, "Failed to add ambulance.");
    }

} catch (SQLException ex) {
    // Error handling for database connection or SQL issues
    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
} finally {
    // Ensure resources are closed after the operation
    try {
        if (pstmt != null) pstmt.close();
        if (conn != null) conn.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
    }
}

    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnUpdateAmbulancejButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAmbulancejButton9ActionPerformed
    // Retrieve user input
    String ambulanceId = txtUpdateAmbulanceID.getText();
    String driverName = txtUpdateDriverName.getText();
    String type = cbUpdateAmbulanceType.getSelectedItem().toString();
    String status = cbUpdateAmbulanceStatus.getSelectedItem().toString();
    String location = cbUpdateLocation.getSelectedItem().toString();

    // Database connection parameters
    String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem"; // Replace with your database name
    String username = "root"; // Replace with your MySQL username
    String password = "mysql"; // Replace with your MySQL password

    // SQL update statement
    String updateSQL = "UPDATE Ambulance SET driver_name = ?, type = ?, status = ?, location = ? WHERE ambulance_id = ?";

    // Initialize connection and prepared statement
    Connection conn = null;
    PreparedStatement pstmt = null;

    try {
        // Establishing the database connection
        conn = DriverManager.getConnection(url, username, password);
        pstmt = conn.prepareStatement(updateSQL);

        // Set parameters for the SQL query
        pstmt.setString(1, driverName);
        pstmt.setString(2, type);
        pstmt.setString(3, status);
        pstmt.setString(4, location);
        pstmt.setString(5, ambulanceId);

        // Execute the update operation
        int rowsAffected = pstmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Ambulance updated successfully!");
            // Optionally clear the input fields after updating
            txtUpdateAmbulanceID.setText("");
            txtUpdateDriverName.setText("");
            cbUpdateAmbulanceType.setSelectedIndex(0);
            cbUpdateAmbulanceStatus.setSelectedIndex(0);
            cbUpdateLocation.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "No record found with the given Ambulance ID.");
        }

    } catch (SQLException ex) {
        // Error handling for database connection or SQL issues
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        // Ensure resources are closed after the operation
        try {
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
        }
    }        // TODO add your handling code here:

    }//GEN-LAST:event_btnUpdateAmbulancejButton9ActionPerformed

    private void txtUpdateAmbulanceIDjTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateAmbulanceIDjTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateAmbulanceIDjTextField5ActionPerformed

    private void btnShowRemoveAmbulancePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRemoveAmbulancePanelActionPerformed
      mainPanel.removeAll();
    mainPanel.add(removeAmbulancePanel);

    // Populate the table with data
    populateAmbulanceTable(tableRemoveAmbulance); // Call method to populate the table

    // Refresh the panel view
    mainPanel.repaint();
    mainPanel.revalidate();

    // Add a mouse listener to the table for row selection and deletion
    tableRemoveAmbulance.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int selectedRow = tableRemoveAmbulance.getSelectedRow();
            if (selectedRow != -1) {
                // Get the ambulance ID of the selected row
                String ambulanceId = tableRemoveAmbulance.getValueAt(selectedRow, 0).toString();

                // Confirm deletion
                int confirm = JOptionPane.showConfirmDialog(null, 
                        "Are you sure you want to delete Ambulance ID: " + ambulanceId + "?",
                        "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                
                if (confirm == JOptionPane.YES_OPTION) {
                    deleteAmbulance(ambulanceId); // Call delete method
                    DefaultTableModel tableModel = (DefaultTableModel) tableRemoveAmbulance.getModel();
                    tableModel.removeRow(selectedRow);
                }
            }
        }
    });
    }//GEN-LAST:event_btnShowRemoveAmbulancePanelActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void txtRemoveAmbulanceIDjTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRemoveAmbulanceIDjTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemoveAmbulanceIDjTextField5ActionPerformed

    private void btnRemoveAmbulancejButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAmbulancejButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveAmbulancejButton9ActionPerformed

    private void btnShowAllAmbulanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllAmbulanceActionPerformed
        // TODO add your handling code here:
 showAmbulancePanel();
    mainPanel.removeAll();
        mainPanel.add(ShowAmbulancePanel);
         mainPanel.repaint();
    mainPanel.revalidate();
    }//GEN-LAST:event_btnShowAllAmbulanceActionPerformed

    private void cbAddAmbulanceStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAddAmbulanceStatusActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbAddAmbulanceStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(AmbulanceManagerFromPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(AmbulanceManagerFromPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(AmbulanceManagerFromPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(AmbulanceManagerFromPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new AmbulanceManagerFromPanel().setVisible(true);
        }
    });
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ShowAmbulancePanel;
    private javax.swing.JPanel addAmbulancePanel;
    private javax.swing.JButton btnAddAmbulance;
    private javax.swing.JButton btnClearAddAmbulance;
    private javax.swing.JButton btnClearUpdateAmbulance;
    private javax.swing.JButton btnRemoveAmbulance;
    private javax.swing.JButton btnShowAddAmbulancePanel;
    private javax.swing.JButton btnShowAllAmbulance;
    private javax.swing.JButton btnShowRemoveAmbulancePanel;
    private javax.swing.JButton btnShowUpdateAmbulancePanel;
    private javax.swing.JButton btnUpdateAmbulance;
    private javax.swing.JComboBox<String> cbAddAmbulanceStatus;
    private javax.swing.JComboBox<String> cbAddAmbulanceType;
    private javax.swing.JComboBox<String> cbAddLocation;
    private javax.swing.JComboBox<String> cbUpdateAmbulanceStatus;
    private javax.swing.JComboBox<String> cbUpdateAmbulanceType;
    private javax.swing.JComboBox<String> cbUpdateLocation;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel removeAmbulancePanel;
    private javax.swing.JTable tableAllAmbulance;
    private javax.swing.JTable tableRemoveAmbulance;
    private javax.swing.JTextField txtAddAmbulanceID;
    private javax.swing.JTextField txtAddDriverName;
    private javax.swing.JTextField txtRemoveAmbulanceID;
    private javax.swing.JTextField txtUpdateAmbulanceID;
    private javax.swing.JTextField txtUpdateDriverName;
    private javax.swing.JPanel updateAmbulancePanel;
    // End of variables declaration//GEN-END:variables

    private void showAvailableAmbulances() {
         String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem";
    String username = "root";
    String password = "mysql";

    // SQL query to retrieve all ambulances
    String selectSQL = "SELECT ambulance_id, driver_name, type, status, location FROM Ambulance";

    // Create a new panel for showing the ambulance table
    JPanel ambulancePanel = new JPanel();
    ambulancePanel.setLayout(new BorderLayout());

    // Create a table model and table
    DefaultTableModel tableModel = new DefaultTableModel(new String[]{"Ambulance ID", "Driver Name", "Type", "Status", "Location"}, 0);
    JTable ambulanceTable = new JTable(tableModel);
    JScrollPane scrollPane = new JScrollPane(ambulanceTable);
    ambulancePanel.add(scrollPane, BorderLayout.CENTER);

    // Initialize connection and statement
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;

    try {
        // Establishing the database connection
        conn = DriverManager.getConnection(url, username, password);
        stmt = conn.createStatement();
        rs = stmt.executeQuery(selectSQL);

        // Populate the table model with the result set
        while (rs.next()) {
            String ambulanceId = rs.getString("ambulance_id");
            String driverName = rs.getString("driver_name");
            String type = rs.getString("type");
            String status = rs.getString("status");
            String location = rs.getString("location");

            // Add a new row to the table model
            tableModel.addRow(new Object[]{ambulanceId, driverName, type, status, location});
        }

        // Create a frame to display the table
        JFrame frame = new JFrame("Available Ambulances");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(ambulancePanel);
        frame.setSize(600, 400);
        frame.setVisible(true);

        // Add a mouse listener to handle row selection
        ambulanceTable.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = ambulanceTable.getSelectedRow();
                if (selectedRow != -1) {
                    // Populate fields with selected ambulance data
                    txtUpdateAmbulanceID.setText(ambulanceTable.getValueAt(selectedRow, 0).toString());
                    txtUpdateDriverName.setText(ambulanceTable.getValueAt(selectedRow, 1).toString());
                    cbUpdateAmbulanceType.setSelectedItem(ambulanceTable.getValueAt(selectedRow, 2).toString());
                    cbUpdateAmbulanceStatus.setSelectedItem(ambulanceTable.getValueAt(selectedRow, 3).toString());
                    cbUpdateLocation.setSelectedItem(ambulanceTable.getValueAt(selectedRow, 4).toString());
                    frame.dispose();
                }
            }
        });

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
        }
    }
    }

    private void showAvailableAmbulancesForDeletion() {
String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem";
    String username = "root";
    String password = "mysql";

    // SQL query to retrieve all ambulances
    String selectSQL = "SELECT ambulance_id, driver_name, type, status, location FROM Ambulance";

    // Create a new panel for showing the ambulance table
    JPanel ambulancePanel = new JPanel();
    ambulancePanel.setLayout(new BorderLayout());

    // Create a table model and table
    DefaultTableModel tableModel = new DefaultTableModel(new String[]{"Ambulance ID", "Driver Name", "Type", "Status", "Location"}, 0);
    JTable ambulanceTable = new JTable(tableModel);
    JScrollPane scrollPane = new JScrollPane(ambulanceTable);
    ambulancePanel.add(scrollPane, BorderLayout.CENTER);

    // Initialize connection and statement
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;

    JFrame frame = new JFrame("Available Ambulances for Deletion");
    try {
        // Establishing the database connection
        conn = DriverManager.getConnection(url, username, password);
        stmt = conn.createStatement();
        rs = stmt.executeQuery(selectSQL);

        // Populate the table model with the result set
        while (rs.next()) {
            String ambulanceId = rs.getString("ambulance_id");
            String driverName = rs.getString("driver_name");
            String type = rs.getString("type");
            String status = rs.getString("status");
            String location = rs.getString("location");

            // Add a new row to the table model
            tableModel.addRow(new Object[]{ambulanceId, driverName, type, status, location});
        }

        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(ambulancePanel);
        frame.setSize(600, 400);
        frame.setVisible(true);

        // Add a mouse listener to handle row selection for deletion
        ambulanceTable.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = ambulanceTable.getSelectedRow();
                if (selectedRow != -1) {
                    // Get the ambulance ID of the selected row
                    String ambulanceId = ambulanceTable.getValueAt(selectedRow, 0).toString();

                    // Confirm deletion
                    int confirm = JOptionPane.showConfirmDialog(frame, 
                            "Are you sure you want to delete Ambulance ID: " + ambulanceId + "?",
                            "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                    
                    if (confirm == JOptionPane.YES_OPTION) {
                        deleteAmbulance(ambulanceId); // Call delete method
                        // Remove the row from the table model after deletion
                        tableModel.removeRow(selectedRow);
                    }
                }
            }
        });

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
        }
    }
}

private void deleteAmbulance(String ambulanceId) {
    // Database connection parameters
    String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem";
    String username = "root"; // Replace with your MySQL username
    String password = "mysql"; // Replace with your MySQL password

    // SQL delete statement
    String deleteSQL = "DELETE FROM Ambulance WHERE ambulance_id = ?";

    Connection conn = null;
    PreparedStatement pstmt = null;

    try {
        // Establishing the database connection
        conn = DriverManager.getConnection(url, username, password);
        pstmt = conn.prepareStatement(deleteSQL);

        // Set the parameter for the SQL query
        pstmt.setString(1, ambulanceId);

        // Execute the delete operation
        int rowsAffected = pstmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Ambulance deleted successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "No ambulance found with the given ID.");
        }

    } catch (SQLException ex) {
        // Error handling for database connection or SQL issues
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        // Ensure resources are closed after the operation
        try {
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
        }}
}

    private void showAmbulancePanel() {
  
        // Switch to the ShowAmbulancePanel
    
        populateAmbulanceTable(tableAllAmbulance); // Call method to populate the table
     
       
    }


    // Method to populate the JTable with existing data
    private void populateAmbulanceTable(JTable tb) {
        // Clear existing data from the table
        DefaultTableModel model = (DefaultTableModel) tb.getModel();
        model.setRowCount(0); // Remove all rows

        // SQL query to fetch all ambulances
        String query = "SELECT ambulance_id,registration_number, driver_name, type, status, location FROM Ambulance";
        String url = "jdbc:mysql://localhost:3306/AmbulanceManagementSystem";
        String username = "root";
        String password = "mysql";

        // Establish a connection and fetch data
        try (Connection conn = DriverManager.getConnection(url, username, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            // Iterate through the result set and add rows to the table model
            while (rs.next()) {
                String ambulanceId = rs.getString("ambulance_id");
                String registrationNo = rs.getString("registration_number");
                String driverName = rs.getString("driver_name");
                String type = rs.getString("type");
                String status = rs.getString("status");
                String location = rs.getString("location");
                model.addRow(new Object[]{ambulanceId,registrationNo, driverName, type, status, location});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage());
        }}

    private void showAmbulanceRemovePanel() {
         populateAmbulanceTable(tableRemoveAmbulance); // Call method to populate the table
    
    // Switch to the panel containing the remove functionality
    
    // Add a mouse listener to the table for row selection and deletion
    tableRemoveAmbulance.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int selectedRow = tableRemoveAmbulance.getSelectedRow();
            if (selectedRow != -1) {
                // Get the ambulance ID of the selected row
                String ambulanceId = tableRemoveAmbulance.getValueAt(selectedRow, 0).toString();

                // Confirm deletion
                int confirm = JOptionPane.showConfirmDialog(null, 
                        "Are you sure you want to delete Ambulance ID: " + ambulanceId + "?",
                        "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                
                if (confirm == JOptionPane.YES_OPTION) {
                    deleteAmbulance(ambulanceId); // Call delete method
                    DefaultTableModel tableModel = (DefaultTableModel) tableRemoveAmbulance.getModel();
                    tableModel.removeRow(selectedRow);
                }
            }
        }
    });

    // Refresh panel view
    mainPanel.repaint();
    mainPanel.revalidate();
}
    // Assuming you have these JComboBoxes defined in your class
// Method to populate the combo boxes
private void populateComboBoxes() {
    cbAddAmbulanceType.removeAllItems();
    cbAddAmbulanceStatus.removeAllItems();
    cbAddLocation.removeAllItems();
    // Populate "type" combo box
    cbAddAmbulanceType.addItem("Basic");
    cbAddAmbulanceType.addItem("Advanced");
    cbAddAmbulanceType.addItem("ICU");

    // Populate "status" combo box
    cbAddAmbulanceStatus.addItem("Available");
    cbAddAmbulanceStatus.addItem("In Service");
    cbAddAmbulanceStatus.addItem("Under Maintenance");

    // Populate "location" combo box
    cbAddLocation.addItem("Location A");
    cbAddLocation.addItem("Location B");
    cbAddLocation.addItem("Location C");
}

}
    


    
